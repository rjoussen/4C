// This file is part of 4C multiphysics licensed under the
// GNU Lesser General Public License v3.0 or later.
//
// See the LICENSE.md file in the top-level for license information.
//
// SPDX-License-Identifier: LGPL-3.0-or-later

#include "4C_legacy_enum_definitions_materials.hpp"

#include "4C_utils_exceptions.hpp"

FOUR_C_NAMESPACE_OPEN

std::string_view Core::Materials::to_string(Core::Materials::MaterialType material_type)
{
  switch (material_type)
  {
    case m_fluid:
      return "MAT_fluid";
    case m_fluid_murnaghantait:
      return "MAT_fluid_murnaghantait";
    case m_fluid_linear_density_viscosity:
      return "MAT_fluid_linear_density_viscosity";
    case m_fluid_weakly_compressible:
      return "MAT_fluid_weakly_compressible";
    case m_carreauyasuda:
      return "MAT_carreauyasuda";
    case m_modpowerlaw:
      return "MAT_modpowerlaw";
    case m_herschelbulkley:
      return "MAT_herschelbulkley";
    case m_lubrication:
      return "MAT_lubrication";
    case m_lubrication_law_constant:
      return "MAT_lubrication_law_constant";
    case m_lubrication_law_barus:
      return "MAT_lubrication_law_barus";
    case m_lubrication_law_roeland:
      return "MAT_lubrication_law_roeland";
    case m_scatra:
      return "MAT_scatra";
    case m_scatra_reaction_poroECM:
      return "MAT_scatra_reaction_poro";
    case m_scatra_reaction:
      return "MAT_scatra_reaction";
    case m_scatra_multiporo_fluid:
      return "MAT_scatra_multiporo_fluid";
    case m_scatra_multiporo_volfrac:
      return "MAT_scatra_multiporo_volfrac";
    case m_scatra_multiporo_solid:
      return "MAT_scatra_multiporo_solid";
    case m_scatra_multiporo_temperature:
      return "MAT_scatra_multiporo_temperature";
    case m_scatra_chemotaxis:
      return "MAT_scatra_chemotaxis";
    case m_scatra_multiscale:
      return "MAT_scatra_multiscale";
    case m_muscle_weickenmeier:
      return "MAT_Muscle_Weickenmeier";
    case m_muscle_combo:
      return "MAT_Muscle_Combo";
    case m_muscle_giantesio:
      return "MAT_Muscle_Giantesio";
    case m_myocard:
      return "MAT_myocard";
    case m_sutherland:
      return "MAT_sutherland";
    case m_ion:
      return "MAT_ion";
    case m_iterative_prestress:
      return "MAT_IterativePrestress";
    case m_newman:
      return "MAT_newman";
    case m_newman_multiscale:
      return "MAT_newman_multiscale";
    case m_scl:
      return "MAT_scl";
    case m_electrode:
      return "MAT_electrode";
    case m_matlist:
      return "MAT_matlist";
    case m_matlist_reactions:
      return "MAT_matlist_reactions";
    case m_matlist_chemotaxis:
      return "MAT_matlist_chemotaxis";
    case m_matlist_chemoreac:
      return "MAT_matlist_chemo_reac";
    case m_elchmat:
      return "MAT_elchmat";
    case m_elchphase:
      return "MAT_elchphase";
    case m_stvenant:
      return "MAT_Struct_StVenantKirchhoff";
    case m_thermostvenant:
      return "MAT_Struct_ThermoStVenantK";
    case m_pldruckprag:
      return "MAT_Struct_DruckerPrager";
    case m_thermopllinelast:
      return "MAT_Struct_ThermoPlasticLinElast";
    case m_superelast:
      return "MAT_Struct_SuperElastSMA";
    case m_thermoplhyperelast:
      return "MAT_Struct_ThermoPlasticHyperElast";
    case m_plnlnlogneohooke:
      return "MAT_Struct_PlasticNlnLogNeoHooke";
    case m_pllinelast:
      return "MAT_Struct_PlasticLinElast";
    case m_vp_no_yield_surface:
      return "MAT_Struct_Viscoplastic_No_Yield_Surface";
    case m_vp_robinson:
      return "MAT_Struct_Robinson";
    case m_elpldamage:
      return "MAT_Struct_Damage";
    case m_aaaneohooke:
      return "MAT_Struct_AAANeoHooke";
    case m_visconeohooke:
      return "MAT_VISCONEOHOOKE";
    case m_viscoanisotropic:
      return "MAT_VISCOANISO";
    case m_struct_multiscale:
      return "MAT_Struct_Multiscale";
    case m_elasthyper:
      return "MAT_ElastHyper";
    case m_viscoelasthyper:
      return "MAT_ViscoElastHyper";
    case m_plelasthyper:
      return "MAT_PlasticElastHyper";
    case m_plelasthyperVCU:
      return "MAT_PlasticElastHyperVCU";
    case mes_couplogneohooke:
      return "ELAST_CoupLogNeoHooke";
    case mes_coupSVK:
      return "ELAST_CoupSVK";
    case mes_coupsimopister:
      return "ELAST_CoupSimoPister";
    case mes_couplogmixneohooke:
      return "ELAST_CoupLogMixNeoHooke";
    case mes_coupexppol:
      return "ELAST_CoupExpPol";
    case mes_coupneohooke:
      return "ELAST_CoupNeoHooke";
    case mes_coupmooneyrivlin:
      return "ELAST_CoupMooneyRivlin";
    case mes_coupblatzko:
      return "ELAST_CoupBlatzKo";
    case mes_isoneohooke:
      return "ELAST_IsoNeoHooke";
    case mes_isoogden:
      return "ELAST_IsoOgden";
    case mes_isoyeoh:
      return "ELAST_IsoYeoh";
    case mes_iso1pow:
      return "ELAST_Iso1Pow";
    case mes_iso2pow:
      return "ELAST_Iso2Pow";
    case mes_coup1pow:
      return "ELAST_Coup1Pow";
    case mes_coup2pow:
      return "ELAST_Coup2Pow";
    case mes_coup3pow:
      return "ELAST_Coup3Pow";
    case mes_coup13apow:
      return "ELAST_Coup13aPow";
    case mes_isoexpopow:
      return "ELAST_IsoExpoPow";
    case mes_isomooneyrivlin:
      return "ELAST_IsoMooneyRivlin";
    case mes_isomuscleblemker:
      return "ELAST_IsoMuscle_Blemker";
    case mes_isotestmaterial:
      return "ELAST_IsoTestMaterial";
    case mes_remodelfiber:
      return "ELAST_RemodelFiber";
    case mes_volsussmanbathe:
      return "ELAST_VolSussmanBathe";
    case mes_volpenalty:
      return "ELAST_VolPenalty";
    case mes_vologden:
      return "ELAST_VolOgden";
    case mes_volpow:
      return "ELAST_VolPow";
    case mes_coupanisoexpoactive:
      return "ELAST_CoupAnisoExpoActive";
    case mes_coupanisoexpo:
      return "ELAST_CoupAnisoExpo";
    case mes_coupanisoexposhear:
      return "ELAST_CoupAnisoExpoShear";
    case mes_coupanisopow:
      return "ELAST_CoupAnisoPow";
    case mes_coupanisoexpotwocoup:
      return "ELAST_CoupAnisoExpoTwoCoup";
    case mes_coupanisoneohooke:
      return "ELAST_CoupAnisoNeoHooke";
    case mes_anisoactivestress_evolution:
      return "ELAST_AnisoActiveStress_Evolution";
    case mes_coupanisoneohooke_varprop:
      return "ELAST_CoupAnisoNeoHooke_VarProp";
    case mes_isoanisoexpo:
      return "ELAST_IsoAnisoExpo";
    case mes_structuraltensorstratgy:
      return "ELAST_StructuralTensor";
    case mes_couptransverselyisotropic:
      return "ELAST_CoupTransverselyIsotropic";
    case mes_coupvarga:
      return "ELAST_CoupVarga";
    case mes_isovarga:
      return "ELAST_IsoVarga";
    case mes_coupmyocard:
      return "VISCO_CoupMyocard";
    case mes_isoratedep:
      return "VISCO_IsoRateDep";
    case mes_genmax:
      return "VISCO_GenMax";
    case mes_fract:
      return "VISCO_Fract";
    case mes_viscopart:
      return "VISCO_PART";
    case mes_generalizedgenmax:
      return "VISCO_GeneralizedGenMax";
    case mes_viscobranch:
      return "VISCO_BRANCH";
    case m_cnst_art:
      return "MAT_CNST_ART";
    case m_thermo_fourier:
      return "MAT_Fourier";
    case m_soret:
      return "MAT_soret";
    case m_membrane_elasthyper:
      return "MAT_Membrane_ElastHyper";
    case m_membrane_activestrain:
      return "MAT_Membrane_ActiveStrain";
    case m_growthremodel_elasthyper:
      return "MAT_GrowthRemodel_ElastHyper";
    case m_multiplicative_split_defgrad_elasthyper:
      return "MAT_MultiplicativeSplitDefgradElastHyper";
    case mfi_no_growth:
      return "MAT_InelasticDefgradNoGrowth";
    case mfi_lin_scalar_iso:
      return "MAT_InelasticDefgradLinScalarIso";
    case mfi_lin_scalar_aniso:
      return "MAT_InelasticDefgradLinScalarAniso";
    case mfi_poly_intercal_frac_iso:
      return "MAT_InelasticDefgradPolyIntercalFracIso";
    case mfi_poly_intercal_frac_aniso:
      return "MAT_InelasticDefgradPolyIntercalFracAniso";
    case mfi_lin_temp_iso:
      return "MAT_InelasticDefgradLinTempIso";
    case mfi_time_funct:
      return "MAT_InelasticDefgradTimeFunct";
    case mfi_transv_isotrop_elast_viscoplast:
      return "MAT_InelasticDefgradTransvIsotropElastViscoplast";
    case mvl_reformulated_Johnson_Cook:
      return "MAT_ViscoplasticLawReformulatedJohnsonCook";
    case mvl_Anand:
      return "MAT_ViscoplasticLawAnand";
    case m_sc_dep_interp:
      return "MAT_ScDepInterp";
    case m_constraintmixture:
      return "MAT_ConstraintMixture";
    case m_structporo:
      return "MAT_StructPoro";
    case m_poro_law_linear:
      return "MAT_PoroLawLinear";
    case m_poro_law_constant:
      return "MAT_PoroLawConstant";
    case m_poro_law_logNeoHooke_Penalty:
      return "MAT_PoroLawNeoHooke";
    case m_poro_law_incompr_skeleton:
      return "MAT_PoroLawIncompSkel";
    case m_poro_law_linear_biot:
      return "MAT_PoroLawLinBiot";
    case m_poro_law_density_dependent:
      return "MAT_PoroLawDensityDependent";
    case m_poro_densitylaw_constant:
      return "MAT_PoroDensityLawConstant";
    case m_poro_densitylaw_exp:
      return "MAT_PoroDensityLawExp";
    case m_fluidporo_relpermeabilitylaw_constant:
      return "MAT_FluidPoroRelPermeabilityLawConstant";
    case m_fluidporo_relpermeabilitylaw_exp:
      return "MAT_FluidPoroRelPermeabilityLawExp";
    case m_fluidporo_viscositylaw_constant:
      return "MAT_FluidPoroViscosityLawConstant";
    case m_fluidporo_viscositylaw_celladh:
      return "MAT_FluidPoroViscosityLawCellAdherence";
    case m_structpororeaction:
      return "MAT_StructPoroReaction";
    case m_structpororeactionECM:
      return "MAT_StructPoroReactionECM";
    case m_fluidporo:
      return "MAT_FluidPoro";
    case m_fluidporo_multiphase:
      return "MAT_FluidPoroMultiPhase";
    case m_fluidporo_multiphase_reactions:
      return "MAT_FluidPoroMultiPhaseReactions";
    case m_fluidporo_singlereaction:
      return "MAT_FluidPoroSingleReaction";
    case m_fluidporo_singlephase:
      return "MAT_FluidPoroSinglePhase";
    case m_fluidporo_singlevolfrac:
      return "MAT_FluidPoroSingleVolFrac";
    case m_fluidporo_volfracpressure:
      return "MAT_FluidPoroVolFracPressure";
    case m_fluidporo_phasedof_diffpressure:
      return "MAT_FluidPoroSinglePhaseDofDiffPressure";
    case m_fluidporo_phasedof_pressure:
      return "MAT_FluidPoroSinglePhaseDofPressure";
    case m_fluidporo_phasedof_saturation:
      return "MAT_FluidPoroSinglePhaseDofSaturation";
    case m_fluidporo_phaselaw_linear:
      return "MAT_PhaseLawLinear";
    case m_fluidporo_phaselaw_tangent:
      return "MAT_PhaseLawTangent";
    case m_fluidporo_phaselaw_constraint:
      return "MAT_PhaseLawConstraint";
    case m_fluidporo_phaselaw_byfunction:
      return "MAT_PhaseLawByFunction";
    case m_spring:
      return "MAT_Struct_Spring";
    case m_beam_reissner_elast_hyper:
      return "MAT_BeamReissnerElastHyper";
    case m_beam_reissner_elast_plastic:
      return "MAT_BeamReissnerElastPlastic";
    case m_beam_reissner_elast_hyper_bymodes:
      return "MAT_BeamReissnerElastHyper_ByModes";
    case m_beam_kirchhoff_elast_hyper:
      return "MAT_BeamKirchhoffElastHyper";
    case m_beam_kirchhoff_elast_hyper_bymodes:
      return "MAT_BeamKirchhoffElastHyper_ByModes";
    case m_beam_kirchhoff_torsionfree_elast_hyper:
      return "MAT_BeamKirchhoffTorsionFreeElastHyper";
    case m_beam_kirchhoff_torsionfree_elast_hyper_bymodes:
      return "MAT_BeamKirchhoffTorsionFreeElastHyper_ByModes";
    case m_crosslinkermat:
      return "MAT_Crosslinker";
    case m_0d_maxwell_acinus:
      return "MAT_0D_MAXWELL_ACINUS";
    case m_0d_maxwell_acinus_neohookean:
      return "MAT_0D_MAXWELL_ACINUS_NEOHOOKEAN";
    case m_0d_maxwell_acinus_exponential:
      return "MAT_0D_MAXWELL_ACINUS_EXPONENTIAL";
    case m_0d_maxwell_acinus_doubleexponential:
      return "MAT_0D_MAXWELL_ACINUS_DOUBLEEXPONENTIAL";
    case m_0d_maxwell_acinus_ogden:
      return "MAT_0D_MAXWELL_ACINUS_OGDEN";
    case m_particle_sph_fluid:
      return "MAT_ParticleSPHFluid";
    case m_particle_sph_boundary:
      return "MAT_ParticleSPHBoundary";
    case m_particle_dem:
      return "MAT_ParticleDEM";
    case m_particle_wall_dem:
      return "MAT_ParticleWallDEM";
    case m_mixture:
      return "MAT_Mixture";
    case mix_elasthyper:
      return "MIX_Constituent_ElastHyper";
    case mix_elasthyper_damage:
      return "MIX_Constituent_ElastHyper_Damage";
    case mix_elasthyper_elastin_membrane:
      return "MIX_Constituent_ElastHyper_ElastinMembrane";
    case mix_solid_material:
      return "MIX_Constituent_SolidMaterial";
    case mix_growth_strategy_isotropic:
      return "MIX_GrowthStrategy_Isotropic";
    case mix_growth_strategy_anisotropic:
      return "MIX_GrowthStrategy_Anisotropic";
    case mix_growth_strategy_stiffness:
      return "MIX_GrowthStrategy_Stiffness";
    case mix_prestress_strategy_constant:
      return "MIX_Prestress_Strategy_Constant";
    case mix_prestress_strategy_cylinder:
      return "MIX_Prestress_Strategy_Cylinder";
    case mix_prestress_strategy_iterative:
      return "MIX_Prestress_Strategy_Iterative";
    case mix_full_constrained_mixture_fiber:
      return "MIX_Constituent_FullConstrainedMixtureFiber";
    case mix_remodelfiber_expl:
      return "MIX_Constituent_ExplicitRemodelFiber";
    case mix_remodelfiber_impl:
      return "MIX_Constituent_ImplicitRemodelFiber";
    case mix_remodelfiber_material_exponential:
      return "MIX_Constituent_RemodelFiber_Material_Exponential";
    case mix_remodelfiber_material_exponential_active:
      return "MIX_Constituent_RemodelFiber_Material_Exponential_Active";
    case mix_rule_function:
      return "MIX_Rule_Function";
    case mix_rule_map:
      return "MIX_Rule_Map";
    case mix_rule_simple:
      return "MIX_Rule_Simple";
    case mix_rule_growthremodel:
      return "MIX_GrowthRemodelMixtureRule";
    case m_crystplast:
      return "MAT_crystal_plasticity";
    case m_linelast1D:
      return "MAT_LinElast1D";
    case m_linelast1D_growth:
      return "MAT_LinElast1DGrowth";
    default:
      FOUR_C_THROW("Unknown material type");
  }
}

FOUR_C_NAMESPACE_CLOSE
